{"version":3,"sources":["components/MyHeader/MyHeader.js","components/ListPeople/PeopleInfo.js","components/ListPeople/ListPeople.js","App.js","serviceWorker.js","Redux/State.js","components/MyHeader/sortingPeople.js","components/MyHeader/rerenderPeople.js","Redux/GetPeople.js","index.js"],"names":["MyHeader","props","className","id","type","placeholder","name","ref","RefOfArea","AreaSorter1","onInput","rerenderPeople","AreaSorter2","AreaSorter3","AreaSorterm","defaultChecked","htmlFor","AreaSorterf","PeopleInfo","index","content","lastname","age","sex","ListPeople","Peoples","justNeedId","map","info_ID","App","Boolean","window","location","hostname","match","store","state","sortingByName","inputID","text","current","value","filter","item","i","arr","toLowerCase","includes","sortingByLastname","sortingByAge","toString","sorting","checkedm","checked","checkedf","sortingBySex","GetvenbestUsers","GetvenbastUsers","flag","fetch","then","res","json","rerenderDOM","error","console","log","React","createRef","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61e5a090.chunk.js","sourcesContent":["import React from 'react';\r\n//import './normalize.css';\r\nimport './../../INT20H.css';\r\nimport './../../venbest-test-app.css';\r\n//import Navigation from './Navigation/Menu.js';\r\n//import NoNavigation from './Navigation/NoMenu.js';\r\n//import { AreaSorter1 } from './../index';\r\nlet MyHeader = (props) => {\r\n  //let AreaSorter1 = React.createRef();\r\n  return (\r\n    <div className=\"MyHeader\">\r\n      <div className=\"top-block\">\r\n        <div className=\"screen\">\r\n           <header>\r\n              Наши клиенты:\r\n           </header>\r\n        </div>\r\n        <div className=\"screen\">\r\n           <div className=\"sorting row justify-content-center\">\r\n              <div className=\"col-sm-7 col-md-7 col-lg-5 col-xl-5\" id=\"list-ul1\">\r\n                 <b className=\"PreText\">Имя:</b><input className=\"text_sort input0\" type=\"text\" placeholder=\"имя\" name=\"vh\"  id=\"inputList1\" ref={props.RefOfArea.AreaSorter1} onInput={ props.rerenderPeople }></input> {/**/}\r\n                 <b className=\"PreText\">Фамилия:</b><input className=\"text_sort input0\" type=\"text\" placeholder=\"фамилия\" name=\"vh\"  id=\"inputList2\" ref={props.RefOfArea.AreaSorter2} onInput={ props.rerenderPeople }></input> {/**/}\r\n                 <b className=\"PreText\">Возраст:</b><input className=\"text_sort input0\" type=\"text\" placeholder=\"возраст\" name=\"vh\"  id=\"inputList3\" ref={props.RefOfArea.AreaSorter3} onInput={ props.rerenderPeople }></input> {/**/}\r\n                 <div className=\"checkbox row justify-content-center\">\r\n                 <b className=\"PreText col-auto\">Пол:   </b>\r\n                  <div className=\"form-check form-check-inline col-auto mycheck\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" ref={props.RefOfArea.AreaSorterm} defaultChecked onInput={ props.rerenderPeople }></input>\r\n                    <label className=\"form-check-label\" htmlFor=\"inlineCheckbox1\">Мужчина</label>\r\n                  </div>\r\n                  <div className=\"form-check form-check-inline col-auto mycheck\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" ref={props.RefOfArea.AreaSorterf} defaultChecked onInput={ props.rerenderPeople }></input>\r\n                    <label className=\"form-check-label\" htmlFor=\"inlineCheckbox2\">Женщина</label>\r\n                  </div>\r\n                 </div>\r\n              </div>\r\n              {/* <div className=\"col-sm-5 col-md-5 col-lg-4 col-xl-3\">\r\n                 <button className=\"btnsort\" id=\"sort\" onClick={ props.rerenderPeople }>Отсортировать</button> {//}\r\n              </div> */}\r\n           </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyHeader;","import React from 'react';\r\n//import './normalize.css';\r\nimport './../../INT20H.css';\r\nimport './../../venbest-test-app.css';\r\nconst PeopleInfo = (props) => {\r\n\r\n  let Sex = ()=> {\r\n    return (props.content.sex === \"m\") ? \"Парень\": \"Девушка\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"PeopleInfo row justify-content-center\">\r\n    <b className=\"namber_in_order align-self-center\">{props.index + 1} </b>\r\n    <div className=\"conteiner\">\r\n    <hr></hr>\r\n      <div className=\"LineOfNameSurname\">\r\n        <b>{props.content.name} {props.content.lastname}</b>\r\n      </div>\r\n      <div className=\"LineOfAge\">\r\n        <b>Возраст: <span>{props.content.age}</span></b>\r\n      </div>\r\n      <div className=\"LineOfGender\">\r\n        <b>Пол: <span>{ Sex() }</span></b>\r\n      </div>\r\n    <hr></hr>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PeopleInfo;","import React from 'react';\r\n//import './normalize.css';\r\nimport './../../INT20H.css';\r\nimport './../../venbest-test-app.css';\r\nimport PeopleInfo from './PeopleInfo.js';\r\n//import NoNavigation from './Navigation/NoMenu.js'; info_of_ID1\r\n\r\n//var fs = require('fs');\r\n//var PeoplesInfo1 = fs.readFile('PeoplesInfo1.json', 'utf8');\r\n//var PeoplesInfo12 = JSON.parse('PeoplesInfo1.json');\r\n//console.log(PeoplesInfo12);\r\n\r\n//import info_of_ID1 from './PeoplesInfo1.json';\r\n\r\n/* <PeopleInfo content={info_of_ID[0]}/>\r\n<PeopleInfo content={info_of_ID[1]}/>\r\n<PeopleInfo content={info_of_ID[2]}/>\r\n<PeopleInfo content={info_of_ID[3]}/>\r\n<PeopleInfo content={info_of_ID[4]}/> */\r\n\r\nconst ListPeople = (props) => {\r\n\r\n  let Peoples = props.justNeedId.map( (info_ID, index) => <PeopleInfo content={info_ID} index = {index}/>);\r\n  \r\n  return (\r\n    <div className=\"ListPeople\">\r\n      {Peoples}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListPeople;","import React from 'react';\n//import logo from './logo.svg';\nimport './INT20H.css';\nimport './venbest-test-app.css';\nimport MyHeader from './components/MyHeader/MyHeader.js';\nimport ListPeople from './components/ListPeople/ListPeople.js';\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <MyHeader RefOfArea={props.RefOfArea} rerenderPeople={props.rerenderPeople}/> {/*f={props.f}*/}\n      <ListPeople justNeedId={props.justNeedId}/>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let store = {\r\n  state: [\r\n    {\r\n      name: \"Александр\",\r\n      lastname: \"Кислицкий\",\r\n      age: 20,\r\n      sex: \"m\"\r\n    }],\r\n  // setState(venbestUsers) {\r\n  //   this._state = venbestUsers;\r\n  // },\r\n  // getState() {\r\n  //   return this._state;\r\n  // }\r\n}\r\nexport default store;\r\n","\r\nimport {RefOfArea} from '../../index.js';\r\n//import {info_of_ID} from '../../Redux/Peoples.js';\r\n\r\n\r\nexport let sortingByName = (inputID)=> {\r\n  let text = RefOfArea.AreaSorter1.current.value;\r\n  let justNeedId = inputID.filter( (item, i, arr) => {\r\n    return (inputID[i].name.toLowerCase().includes(text.toLowerCase()))\r\n  })\r\n  if(text === 0) {justNeedId = inputID} \r\n  return justNeedId;\r\n}\r\n\r\nexport let sortingByLastname = (inputID)=> {\r\n  let text = RefOfArea.AreaSorter2.current.value;\r\n  let justNeedId;\r\n  justNeedId = sortingByName(inputID).filter( (item, i, arr) => {\r\n    return (sortingByName(inputID)[i].lastname.toLowerCase().includes(text.toLowerCase()))\r\n  });\r\n  if(text === 0) {justNeedId = sortingByName(inputID)}\r\n  return justNeedId;\r\n}\r\n\r\nexport let sortingByAge = (inputID)=> {\r\n  let text = RefOfArea.AreaSorter3.current.value;\r\n  let justNeedId;\r\n  justNeedId = sortingByLastname(inputID).filter( (item, i, arr) => {\r\n    return (sortingByLastname(inputID)[i].age.toString() === text.toString())\r\n  });\r\n  if(text == 0) { return justNeedId = sortingByLastname(inputID)}\r\n  return justNeedId;\r\n}\r\n\r\nexport let sortingBySex = (inputID) => {\r\n  let checkedm = RefOfArea.AreaSorterm.current.checked;\r\n  let checkedf = RefOfArea.AreaSorterf.current.checked;\r\n  let justNeedId;\r\n  if(checkedm && checkedf) {justNeedId = sortingByAge(inputID)} else {\r\n    if(checkedm) {\r\n      justNeedId = sortingByAge(inputID).filter( (item, i, arr) => {\r\n        return (sortingByAge(inputID)[i].sex === \"m\")\r\n      });\r\n    } else {\r\n      if(checkedf) {\r\n      justNeedId = sortingByAge(inputID).filter( (item, i, arr) => {\r\n        return (sortingByAge(inputID)[i].sex === \"f\")\r\n      });\r\n      } else {\r\n        justNeedId=[];\r\n      }\r\n    }\r\n  }\r\n  \r\n  return justNeedId\r\n}\r\n\r\nlet sorting = (inputID) => {\r\n  return sortingBySex(inputID);\r\n}\r\n\r\nexport default sorting;","\r\nimport {RefOfArea} from './../../index.js';\r\nimport {rerenderDOM} from './../../index.js';\r\nimport sorting from './sortingPeople';\r\nimport GetvenbestUsers from './../../Redux/GetPeople.js';\r\nimport store from './../../Redux/State.js';\r\n\r\n\r\nlet rerenderPeople = () => {\r\n  GetvenbestUsers(store, 1);\r\n  //rerenderDOM(GetvenbestUsers(store), rerenderPeople, RefOfArea);\r\n}\r\n \r\nexport default rerenderPeople;","import {rerenderDOM} from './../index.js';\r\nimport {RefOfArea} from './../index.js';\r\nimport rerenderPeople from './../components/MyHeader/rerenderPeople.js';\r\nimport sorting from './../components/MyHeader/sortingPeople.js';\r\nimport Axios from 'axios';\r\n//import {GetDada} from '';\r\n\r\nlet GetvenbastUsers = (store, flag) => {\r\n  // let res2 = Axios.get('https://venbest-test.herokuapp.com/').then(res => {\r\n  //   console.log(res);\r\n  // })\r\n  // console.log(res2);\r\n  if(flag == 1) {\r\n  window.fetch(\"https://venbest-test.herokuapp.com/\")\r\n    .then(res => res.json())\r\n    .then(\r\n      (res) => {\r\n        store.state = res;\r\n        rerenderDOM(sorting(store.state), rerenderPeople, RefOfArea);\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n      }\r\n    )\r\n  } else {\r\n    window.fetch(\"https://venbest-test.herokuapp.com/\")\r\n    .then(res => res.json())\r\n    .then(\r\n      (res) => {\r\n        store.state = res;\r\n        rerenderDOM(store.state, rerenderPeople, RefOfArea);\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n      }\r\n    )\r\n  }\r\n};\r\nexport default GetvenbastUsers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './Redux/State.js';\nimport GetvenbestUsers from './Redux/GetPeople.js';\nimport {info_of_ID} from './Redux/Peoples.js';\nimport rerenderPeople from './components/MyHeader/rerenderPeople.js';\n\nvar justNeedId = info_of_ID;\n\nlet AreaSorter1 = React.createRef();\nlet AreaSorter2 = React.createRef();\nlet AreaSorter3 = React.createRef();\nlet AreaSorterm = React.createRef();\nlet AreaSorterf = React.createRef();\nexport let RefOfArea = {\n  AreaSorter1: AreaSorter1,\n  AreaSorter2: AreaSorter2,\n  AreaSorter3: AreaSorter3,\n  AreaSorterm: AreaSorterm,\n  AreaSorterf: AreaSorterf\n}\nexport let rerenderDOM = (justNeedId, rerenderPeople, RefOfArea) => {\n  ReactDOM.render(<App justNeedId={justNeedId} rerenderPeople={rerenderPeople} RefOfArea={RefOfArea}/>, document.getElementById('root'));\n}\n GetvenbestUsers(store, 0);\n//rerenderDOM(GetvenbestUsers(store), rerenderPeople, RefOfArea);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}